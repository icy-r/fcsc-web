---
//updates section for home page
import { fetchContent } from '@services/fetch-content';

// Fetch the updates content as structured data
const updatesData = await fetchContent('updates', 'data');

// Get the updates array from the data
const updates = updatesData.updates || [];
---

<section class="updates-section">
  <div class="container">
    <h2 class="section-title">Latest Updates</h2>
    
    <div class="updates-grid">
      {updates.map((update: any) => (
        <div class="update-card">
          <div class="card-header">
            <span class={`tag ${update.type.toLowerCase()}-tag`}>{update.type}</span>
            {/* Card image */}
            <div class="card-image">
              {update.img && <img src={update.img} alt={update.title} />}
            </div>
          </div>
          <div class="card-content">
            <h3 class="card-title">{update.title}</h3>
            <p class="card-description">{update.description}</p>
            <a href={update.link} class="read-more">Read More â†’</a>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .updates-section {
    padding: var(--space-2xl) 0;
    background-color: var(--color-background);
  }
  
  .section-title {
    text-align: center;
    margin-bottom: var(--space-xl);
    color: var(--color-text-primary);
    font-size: 2.5rem;
  }
  
  .updates-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-lg);
  }
  
  .update-card {
    border-radius: 12px;
    overflow: hidden;
    background-color: var(--color-background-secondary);
    transition: transform var(--transition-normal), box-shadow var(--transition-normal);
  }
  
  .update-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-md);
  }
  
  .card-header {
    position: relative;
    padding: var(--space-sm);
    background-color: var(--color-background-secondary);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .card-header .tag {
    position: absolute;
    top: var(--space-sm);
    left: var(--space-sm);
    z-index: 2;
  }
  
  .card-image {
    height: 120px;
    width: 100%;
    overflow: hidden;
    margin-top: var(--space-sm);
    border-radius: 8px;
    position: relative;
  }
  
  .card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0.7;
    transition: opacity var(--transition-normal);
  }
  
  .update-card:hover .card-image img {
    opacity: 1;
  }
  
  .card-content {
    padding: var(--space-lg);
  }
  
  .tag {
    display: inline-block;
    padding: var(--space-xs) var(--space-sm);
    border-radius: 50px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: var(--space-sm);
  }
  
  .event-tag {
    background-color: var(--color-accent-primary);
    color: var(--color-text-primary);
  }
  
  .blog-tag {
    background-color: var(--color-accent-secondary-magenta);
    color: var(--color-text-primary);
  }
  
  .card-title {
    font-size: 1.5rem;
    margin-bottom: var(--space-sm);
    color: var(--color-text-primary);
  }
  
  .card-description {
    margin-bottom: var(--space-md);
    color: var(--color-text-secondary);
    font-size: 0.95rem;
    line-height: 1.6;
  }
  
  .read-more {
    color: var(--color-accent-secondary-cyan);
    font-weight: 600;
    display: inline-block;
    transition: all var(--transition-fast);
  }
  
  .read-more:hover {
    color: var(--color-accent-secondary-cyan);
    text-shadow: var(--shadow-glow-cyan);
    transform: translateX(3px);
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .updates-grid {
      grid-template-columns: 1fr;
    }
    
    .section-title {
      font-size: 2rem;
    }
  }
</style>
