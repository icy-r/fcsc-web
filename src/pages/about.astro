---
import Layout from '@layouts/Layout.astro';
import { getEntryBySlug } from 'astro:content';

// Page title and metadata
const pageTitle = "About | FCSC";

// Get about data from markdown file
const aboutData = await import('../data/about.md');
const { title, subtitle, mission, core_activities, team } = aboutData.frontmatter;

// Current active team category
let activeCategory = 'All';
---

<Layout pageTitle={pageTitle}>
    <!-- Hero Section -->
    <section class="hero-section">
        <div class="container">
            <h1 class="page-title">{title}</h1>
            <p class="page-subtitle">{subtitle}</p>
        </div>
    </section>

    <!-- Mission & Vision Section -->
    <section class="mission-section">
        <div class="container">
            <div class="content-wrapper">
                <div class="text-content">
                    <h2>{mission.title}</h2>
                    <div class="mission-statement">
                        <h3>Mission:</h3>
                        <p>{mission.mission_statement}</p>
                    </div>
                    <div class="vision-statement">
                        <h3>Vision:</h3>
                        <p>{mission.vision_statement}</p>
                    </div>
                </div>
                <div class="image-content">
                    <!-- Placeholder for mission image -->
                    <div class="mission-image-placeholder">
                        <img src="/content/about-fcsc.png" alt="Mission Image" />
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Core Activities Section -->
    <section class="activities-section">
        <div class="container">
            <h2>{core_activities.title}</h2>
            <ul class="activities-list">
                {core_activities.activities.map((activity: any) => (
                    <li>
                        <span class="bullet">â€¢</span>
                        {activity}
                    </li>
                ))}
            </ul>
        </div>
    </section>

    <!-- Team Section -->
    <section class="team-section">
        <div class="container">
            <h2>{team.title}</h2>
            
            <!-- Team Filter Tabs -->
            <div class="team-filter">
                {team.categories.map((category: any) => (
                    <button 
                        class={`filter-btn ${category.active ? 'active' : ''}`}
                        data-category={category.name}
                    >
                        {category.name}
                    </button>
                ))}
            </div>
            
            <!-- Team Members Grid -->
            <div class="team-grid">
                {team.members.map((member: any) => (
                    <div class="team-card" data-category={member.category}>
                        <div class="member-image">
                            <img src={member.image} alt={member.name} />
                        </div>
                        <div class="member-info">
                            <h3 class="member-name">{member.name}</h3>
                            <p class="member-position">{member.position}</p>
                            <p class="member-bio">{member.bio}</p>
                        </div>
                    </div>
                ))}
            </div>
        </div>
    </section>
</Layout>

<style>
    /* Mission Image Placeholder */
    .mission-image-placeholder {
        width: 100%;
        height: 300px;
        background-color: #111;
        border-radius: 8px;
        overflow: hidden;
    }
    
    .mission-image-placeholder img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    /* Hero Section Styles */
    .hero-section {
        background-color: #000;
        color: #fff;
        padding: 4rem 0 2rem;
        text-align: left;
    }
    
    .page-title {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        font-weight: 700;
    }
    
    .page-subtitle {
        font-size: 1.2rem;
        opacity: 0.8;
    }
    
    /* Container Styles */
    .container {
        width: 90%;
        max-width: 1200px;
        margin: 0 auto;
    }
    
    /* Mission Section Styles */
    .mission-section {
        padding: 4rem 0;
        background-color: #000;
        color: #fff;
    }
    
    .content-wrapper {
        display: flex;
        gap: 2rem;
        align-items: center;
    }
    
    .text-content {
        flex: 1;
    }
    
    .image-content {
        flex: 1;
    }
    
    .mission-image-placeholder {
        width: 100%;
        height: 300px;
        background-color: #111;
        border-radius: 8px;
    }
    
    .mission-statement, .vision-statement {
        margin-bottom: 1.5rem;
    }
    
    .mission-statement h3, .vision-statement h3 {
        color: #3498db;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }
    
    /* Activities Section Styles */
    .activities-section {
        padding: 4rem 0;
        background-color: #000;
        color: #fff;
    }
    
    .activities-list {
        list-style-type: none;
        padding: 0;
        margin-top: 2rem;
    }
    
    .activities-list li {
        margin-bottom: 1rem;
        display: flex;
        align-items: flex-start;
    }
    
    .bullet {
        color: #3498db;
        margin-right: 0.5rem;
        font-size: 1.2rem;
    }
    
    /* Team Section Styles */
    .team-section {
        padding: 4rem 0;
        background-color: #000;
        color: #fff;
    }
    
    .team-filter {
        display: flex;
        gap: 1rem;
        margin: 2rem 0;
        flex-wrap: wrap;
    }
    
    .filter-btn {
        background-color: transparent;
        border: 1px solid #333;
        color: #fff;
        padding: 0.5rem 1rem;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .filter-btn.active {
        background-color: #3498db;
        border-color: #3498db;
    }
    
    .team-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 2rem;
        margin-top: 2rem;
    }
    
    .team-card {
        background-color: #111;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s ease;
    }
    
    .team-card:hover {
        transform: translateY(-5px);
    }
    
    .member-image {
        height: 200px;
        overflow: hidden;
    }
    
    .member-image img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .member-info {
        padding: 1.5rem;
    }
    
    .member-name {
        font-size: 1.2rem;
        margin-bottom: 0.5rem;
    }
    
    .member-position {
        color: #3498db;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }
    
    .member-bio {
        font-size: 0.9rem;
        line-height: 1.5;
        opacity: 0.8;
    }
    
    /* Responsive Styles */
    @media (max-width: 768px) {
        .content-wrapper {
            flex-direction: column;
        }
        
        .team-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        }
    }
</style>

<script>
    // Team filtering functionality
    document.addEventListener('DOMContentLoaded', () => {
        const filterButtons = document.querySelectorAll('.filter-btn');
        const teamCards = document.querySelectorAll<HTMLElement>('.team-card');
        
        // Set initial state (show all)
        filterTeam('All');
        
        // Add click event to filter buttons
        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                // Remove active class from all buttons
                filterButtons.forEach(btn => btn.classList.remove('active'));
                
                // Add active class to clicked button
                button.classList.add('active');
                
                // Filter team members
                const category = button.getAttribute('data-category');
                filterTeam(category);
            });
        });
        
        function filterTeam(category: any) {
            teamCards.forEach(card => {
                if (category === 'All' || card.getAttribute('data-category') === category) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            });
        }
    });
</script>